@startuml

skinparam style strictuml
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
hide empty members

Package "pumlFromJava" {

class Java2Puml
{
+ <<create>> Java2Puml()
+ {static} main(args : String[])
}

class PumlClass extends PumlElement
{
+ <<create>> PumlClass(element : Element)
+ getName() : String
+ toDCA() : String
+ toDCC() : String
- RetrieveVariables()
- RetrieveMethods()
+ getLinks() : ArrayList
}

class PumlDiagram extends PumlElement
{
+ <<create>> PumlDiagram(env : DocletEnvironment)
- RetrievePackages()
+ toDCA() : String
+ toDCC() : String
+ setDirectory(directory : String)
+ setFilename(filename : String)
+ getDirectory() : String
+ getFilename() : String
+ getPackageList() : List
}

class PumlDoclet
{
- dca : Boolean
+ <<create>> PumlDoclet()
+ init(locale : Locale, reporter : Reporter)
+ getName() : String
+ getSupportedOptions() : Set
+ getSupportedSourceVersion() : SourceVersion
+ run(environment : DocletEnvironment)  : Boolean
- InitPumlDiagram(env : DocletEnvironment)
- WritePuml()
}

class PumlElement
{
+ <<create>> PumlElement()
+ {abstract} toDCA() : String
+ {abstract} toDCC() : String
+ {static} GetElementTypeString(element : Element) : String
+ {static} TypeToString(type : TypeMirror) : String
- {static} ExtractTypeString(FullName : String) : String
}

class PumlEnum extends PumlElement
{
+ <<create>> PumlEnum(element : Element)
+ getName() : String
+ toDCA() : String
+ toDCC() : String
+ getEnumElements() : String
}

class PumlInterface extends PumlElement
{
+ <<create>> PumlInterface(element : Element)
+ getName() : String
+ toDCA() : String
+ toDCC() : String
+ linksToString() : String
- RetrieveMethods()
}

class PumlLink extends PumlElement
{
+ <<create>> PumlLink(firstElement : String, secondElement : String, linkType : LinkType)
+ getLinkType() : LinkType
+ getFirstElement() : String
+ getSecondElement() : String
+ {static} RetrieveLinks(element : Element, variableList : ArrayList) : ArrayList
- {static} getSuperClassLink(element : Element) : PumlLink
- {static} getInterfacesLinks(element : Element) : ArrayList
- {static} getAssociatons(element : Element, variableList : ArrayList) : ArrayList
+ {static} linksToString(links : ArrayList) : String
+ toDCA() : String
+ toDCC() : String
}

class PumlMethod extends PumlElement
{
+ <<create>> PumlMethod(element : Element)
- RetrieveParameters()
+ toDCA() : String
+ toDCC() : String
}

class PumlPackage extends PumlElement
{
+ <<create>> PumlPackage(element : Element)
- RetrieveElements()
+ toDCA() : String
+ toDCC() : String
+ getName() : String
}

class PumlParameter extends PumlElement
{
+ <<create>> PumlParameter(variableElement : VariableElement)
+ toDCA() : String
+ toDCC() : String
}

class PumlVariable extends PumlElement
{
+ <<create>> PumlVariable(element : Element, kind : VariableKind)
+ toDCA() : String
+ toDCC() : String
+ getElement() : Element
+ getKind() : VariableKind
}

class "<<enumeration>>\n LinkType" as LinkType extends PumlElement
{
EXTENDS
IMPLEMENTS
ASSOCIATE
}

class "<<enumeration>>\n VariableKind" as VariableKind
{
PRIMITIVE
OBJECT
ENUM
}

PumlDoclet ..> PumlDiagram : use
Java2Puml ..> PumlDoclet : lance
PumlDiagram o...> PumlPackage : use
PumlPackage o..> PumlClass : use
PumlPackage o..> PumlInterface : use
PumlPackage o..> PumlEnum : use
PumlLink ..> LinkType : use
PumlInterface o--> PumlLink
PumlClass o--> PumlLink
VariableKind ..> PumlVariable
PumlParameter o..> PumlVariable : use
PumlMethod o..> PumlParameter : use
}

@enduml


